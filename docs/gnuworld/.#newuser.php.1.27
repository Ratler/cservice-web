<?
require("../../php_includes/blackhole.inc");
require("../../php_includes/cmaster.inc");

/* $Id: newuser.php,v 1.27 2005/03/10 15:57:36 nighty Exp $ */

if($loadavg5 >= CRIT_LOADAVG)
{
   header("Location: highload.php");
   exit;
}


	std_connect();
	$cTheme = get_theme_info();
	if (newusers_off()) {
		echo "<html><head><title>PAGE LOCKED BY CSERVICE ADMINISTRATORS</title>";
		std_theme_styles();
		echo "</head>\n";
		std_theme_body();
		echo "<center>\n";
		echo "<h2>";
		echo "Sorry, You can't register new users at the moment.";
		echo "</h2>";
		echo "</center>\n";
		echo "</body></html>\n\n";
		die;
	}

	if (NEWUSERS_IPCHECK && !newu_ipcheck(0)) {
		echo "<html><head><title>SECURITY WARNING</title>";
		std_theme_styles();
		echo "</head>\n";
		std_theme_body();
		echo "<center>\n";
		echo "<h2>";
		echo "Sorry, your IP address already registered a username, you can only register ONE username.";
		echo "</h2>";
		echo "</center>\n";
		echo "</body></html>\n\n";
		die;
	}

	$confirm_url = gen_server_url() . substr($REQUEST_URI,0,strrpos($REQUEST_URI,"/")) . "/confirm.php";


function cookie_chk( $auth ) {
	global $database,$ENABLE_COOKIE_TABLE;
	// Let the database do your data culling for you, not the program, that's what databases are for.
	$ENABLE_COOKIE_TABLE = 1;
	pg_safe_exec(CLEAR_COOKIES_QUERY);
	if (isset($authtok)) { unset($authtok); }
	if (isset($authcsc)) { unset($authcsc); }
	$authtok = explode(":",$auth);
	$authcsc = $authtok[3];

	$auth_dbh = pg_safe_exec( "select user_id from webcookies where cookie='" . $authcsc . "' and expire>now()::abstime::int4");
	$ENABLE_COOKIE_TABLE = 0;
	// A bit simpler on the logic.  Though I'm not really sure what the function is trying to do.

	if( pg_numrows( $auth_dbh ) < 1 ) {
		return;
	} else {
		$auth_obj = pg_fetch_object( $auth_dbh, 0 );
		std_theme_styles(1);
		std_theme_body();

		echo ( "<p>You are already logged in.  You are not allowed to create multiple accounts.</p>" );
		echo ( "<p>Go to your <a href=\"main.php\" target=\"body\">user page</a>.</p></body></html>");
		exit;
	}

}

cookie_chk( $auth );

// TODO: Clean the username

//
$lowusername = strtolower( $username ); // lower case pgsql cares
$lowemail = strtolower( $email ); // lower case pgsql cares
$failed=0; // assume success!

$first_error=1;

// TODO: Also, regex match obscenities, CService CServe, IRCOp, Oper, etc in username -- lgm
// TODO: Minumum length

if ($username != "") {
	if (strlen($username) > 12 || strlen($username) < 2) {

		$failed=1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">That username is not valid, your username must be between 2 and 12 characters in length.</font>  Your current username ");
		echo( "is ". strlen( $username ) ." characters in length.  Please fix this error.</p>" );

	} else {

		$res=pg_safe_exec("select user_name from users where lower(user_name)='$lowusername'");
		if (pg_numrows($res)>0) {
			$failed=1;
			if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
			echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">That username is already in use</font>, please choose another</p>");
		} else {
			// validate the username.
			//
			if( !(preg_match( "/^[A-Za-z0-9]+$/", $username )) ) {
				$failed = 1;
				if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
				echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">That username is not valid, valid characters are abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890</font>, ");
				echo( "please choose another username.</p>");
			} else {
				// check against username lock DB.
				if (is_locked_username($username)) {
					$failed = 1;
					if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
					echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">That username is NOT valid (LOCKED)</font>,<br> ");
					echo( "Usernames matching <b>" . $ulockinfo->user_name . "</b> are disallowed for the following reason:<br>" . $ulockinfo->reason . ".</p>");
				}
			}

		}
	}
}

if ($username != "") {
	$res = pg_safe_exec("SELECT * FROM noreg WHERE lower(user_name)='$lowusername'");
	if (pg_numrows($res)>0) {
		$failed=1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		$obj = pg_fetch_object($res,0);
		echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">That username (" . $obj->user_name . ") is in NOREG mode</font>, please choose another</p>");
	}
}

if ($email != "") {

	// Added more email validation checks.  The email must contain an @, it must have atleast one character before the @ and it must
	// contain atleast one . and there must be atleast 2 characters trailing the final . and there is no _ in the hostname section.  Just
	// RFC enforcement checking.

	if( !(preg_match( "/^[A-Za-z0-9_+-.]+@[A-Za-z0-9.-]+\.[A-Za-z][A-Za-z]+$/", $email )) ) {
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">Your email address is invalid.</font>  It must contain a @, it must be from a valid domain, and it can only contain alpha-numeric " );
		echo( "characters (a-zA-Z0-9) or the . or - character.</p>" );
	}

	// Now we have to go to the database.  First to see if the email domain is valid, then to see if it's in use.

	if (is_email_locked($LOCK_USERNAME,$email)) {
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">You are not allowed to create a username using this email account ($email).</p>");
	}

	$email_nreg = pg_safe_exec("select * from noreg where lower(email) = '$lowemail' and user_name='*'");
	if (pg_numrows($email_nreg) >0) {
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">This email account ($email) is in NOREG, you can't use it for username registration.</p>");
	}

	$email_dbh = pg_safe_exec( "select user_name from users where lower(email) = '$lowemail'" );
	if( pg_numrows( $email_dbh ) > 0 ) {
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">There is already an account registered with that email address.</font>  You can only have one account ");
		echo( "per person.  If you have lost your password and require a new one to be resent click <a href=\"forgotten_pass.php\">here</a></p>");
	}
}

if ($user_age == 0 && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">You must be 13 years old or more in order to process your request.</p>");
	}

if ($username == "" && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">You must choose a username in order to process your request.</p>");
	}

if ($email == "" && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">You must supply a valid e-mail address in order to process your request.</p>");
	}

if (($question_id<=0 || $question_id>$max_question_id) && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">You must choose a question in order to process your request.</p>");
	}

if ($verificationdata == "" && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">You must answer to the question you picked up.</p>");
	}

if ($verificationdata != "" && $clic == 1)
	{
	if( !(preg_match( "/^[A-Za-z0-9!\ \/\\.+_-]+$/", $verificationdata )) )
		{
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
        	echo( "<p><font color=\"#" . $cTheme->main_warnmsg . "\">That answer is not valid, valid characters are a->z, A->Z, 0->9 and !, /, \, ., +, _, - and space.</font>, ");
        	echo( "please choose another answer to your question.</p>");
        	}
	}

if (strtolower($verificationdata)==strtolower($email) && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">Your answer must be different than your email address.</p>");
	}

if (strtolower($verificationdata)==strtolower($username) && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">Your answer must be different than your username.</p>");
	}

if (strlen($verificationdata)<4 && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">Your answer must be at least 4 chars long.</p>");
	}

if (is_locked_va($verificationdata) && $clic == 1)
	{
	$failed=1;
	if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
	echo("<p><font color=\"#" . $cTheme->main_warnmsg . "\">The verification answer you have chosen is too common. Please pick an answer that is unique and that you will remember.</p>");
	}

if (SHOW_GFXUSRCHK && NEWUSERS_GFXCHECK) {
	if ($clic == 1 && ($gfxcode_crc != md5( $gfxcode_ts . $_SERVER["HTTP_USER_AGENT"] . CRC_SALT_0010 . strtoupper($gfxcode_val) . CRC_SALT_0008))) {
		$failed = 1;
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo "<p><font color=\"#" . $cTheme->main_warnmsg . "\">You entered an invalid code from the picture. <a href=\"newuser.php\">Please try again</a>.</p>";
	} else { // CRC logic is fine, now check with the database temporary record...
		if ($clic == 1) {
			$ENABLE_COOKIE_TABLE = 1;
			pg_safe_exec("DELETE FROM gfxcodes WHERE expire<now()::abstime::int4");
			$r = pg_safe_exec("SELECT expire FROM gfxcodes WHERE crc='" . $gfxcode_crc . "' AND code='" . strtoupper($gfxcode_val) . "'");
			if (pg_numrows($r)==0) {
				$failed = 1;
				if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
				echo "<p><font color=\"#" . $cTheme->main_warnmsg . "\">You entered an invalid/expired code from the picture. <a href=\"newuser.php\">Please try again</a>.</p>";
			} else {
				pg_freeresult($r);
			}
			$ENABLE_COOKIE_TABLE = 0;
		}
	}
	if ($failed==0) { // the code is OK and was processed, pending user addition in "pendingusers", remove it from DB.
			  // this avoid the code from being used to register multiple usernames before it expires.
			  // one code can only register one username.
		$ENABLE_COOKIE_TABLE = 1;
		pg_safe_exec("DELETE FROM gfxcodes WHERE crc='" . $gfxcode_crc . "' AND code='" . strtoupper($gfxcode_val) . "'");
		$ENABLE_COOKIE_TABLE = 0;
	}
}

if ($email != "" and $username != "" and $failed == 0) {
	// Sanitise email
	//

	// checks if cookie disallowing new username is present.
	if ($UNETUB!="" && UNETUB_TIME>0) {
		if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
		echo "<h1>Error</h1><h3><br>\nYour IP has already registered a username, you can only signup for ONE username.</h3>\n";
		echo "</body></html>\n\n";
		die;
	}
	if (NEWUSERS_IPCHECK) {
		if (!newu_ipcheck(1)) {
			if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
			echo "<h1>Error</h1><h3><br>\nYour IP has already registered a username, you can only signup for ONE username.</h3>\n";
			echo "</body></html>\n\n";
			die;
		}
	}
	$cookie=md5(microtime() . time() . CRC_SALT_0003 . $username . $email);
	$expire=time()+86400; // 1 day
	$language = intval( $language ); // Force int
	// Run any user typed field that hasn't already been sanity checked through the prepare_dbtext() function.
	$verificationdata = prepare_dbtext( $verificationdata );
	local_seclog("New user request for `" . $username . "`");
	pg_safe_exec("insert into pendingusers (user_name,cookie,expire,email,language,question_id,verificationdata,poster_ip) values ('$username','$cookie',$expire,'$lowemail',$language,$question_id,'$verificationdata','" . cl_ip() . "')");
	$boundary=md5(time());
	custom_mail($email,$mail_subject_new,"To continue the registration process go to $confirm_url?cookie=$cookie",
		"From: $mail_from_new\nReply-To: $mail_from_new\nX-Mailer: " . NETWORK_NAME . " Channel Service"
	);

	// sets cookie so user cannot create another username within 4 hours.
	if (UNETUB_TIME>0) {
		$expire = time()+UNETUB_TIME;
		$cookie = md5( $expire . "Undernet User Block");
		setcookie("UNETUB",$cookie,$expire,"/");
	}
	if ($first_error) { std_theme_styles(1); std_theme_body(); $first_error=0; }
	echo("<p>Your registration email has been sent.  Please wait to receive it, and then follow the instructions it contains to continue</p>");
	exit;
}
if ($first_error) { std_theme_styles(1); std_theme_body(); echo "<center>"; $first_error=0; }
?>
<form method=post>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 1...</h1>
		The Children's Online Privacy Protection Act of 1998 (COPPA) requires that web page publishers obtain parental
		consent before asking for or using personal information from children under 13. Because <? echo NETWORK_NAME ?> cannot comply
		with this requirement, we must have you state by clicking this box that you are at least 13 years old.<br><br>
		<input type=radio name=user_age value=1>&nbsp;I am 13 or older.<br>
		<input type=radio name=user_age value=0>&nbsp;I am younger than 13.<br>
	</td></tr></table>
</td></tr></table>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 2...</h1>
		Choose a username.  This is how you are known to the channel service bots.
		This does <em>not</em> need to be the same as your nick. A valid username
		is made up of the letters 'A' to 'Z' and the numbers '0' to '9'. THIS IS NOT NICK REGISTRATION. YOU
		ARE NOT REGISTERING YOUR NICKNAME. Can we possibly make it clearer that this is NOT NICK REGISTRATION.
		If you refer to it as nick registration, do not be surprised if we don't know what you are talking about.</p>
		<label>Username: <input type=text name=username value="<?php echo $username; php?>" maxlength=12>
	</td></tr></table>
</td></tr></table>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 3...</h1>
		Please enter your primary email address. Use your ISP email address where possible. Your email address will never be used
		to send you unsolicited email.  It will be used to send you information on how to obtain your
		password. <!--<em>If your email matches one which we have on record for a previously registered channel
		you will be able to automatically register the channel under the new system.</em>. If you previously had a channel
		with X or W, use the address we have on record for you to enable quick return of access.//--></p>
		<label>Email Address: <input type=text name=email value="<?php echo $email; php?>" maxlength=128>
	</td></tr></table>
</td></tr></table>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr>   <td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 4...</h1>
		Select your preferred language for CService's <?=BOT_NAME?> bot to communicate with you on IRC.
		Note that all functions are not supported in all languages.
		If we cannot communicate with your in your language of choice, we will
		use English. <!--(Note: Currently only English is supported, so you may skip this section.)//--></p>
		<label>Language: <select name="language">

<?php
// language selector...
$res=pg_safe_exec("select * from languages ORDER by name");
for ($i=0;$i<pg_numrows($res);$i++) {
 $lang=pg_fetch_object($res,$i);
 echo "<option ";
 if ($lang->id==1) { echo "selected "; }
 echo "value=\"" . $lang->id . "\">" . $lang->name . "</option>\n";
}

php?>
		</select>
	</td></tr></table>
</td></tr></table>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 5....</h1>
		<p>Select a question and give an answer that you will remember. This information will be used as additional verification if you forget your password or need to change your email-of-record.</p>
		<select name=question_id>
		<option selected value=0>--- click here ---</option>
<?php
for ($x=1;$x<=$max_question_id;$x++) {
	echo "<option value=$x";
	if( $x == $question_id ) {
		echo( " selected" );
	}
	echo ">$question_text[$x]</option>\n";
}
php?>
		</select><br>
		<input type=text size=25 maxlength=30 name=verificationdata value="<?php echo $verificationdata; php?>">
		</td></tr></table>
	</td></tr></table>
<? if (SHOW_GFXUSRCHK && NEWUSERS_GFXCHECK) { ?>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step 6....</h1>
<?
		// generate the code to enter and the CRC to check it after post.
		// this solution will hopefully prevent any automated username registration procedure.

		$code_length = 10; // generated code number of chars
		$code_base = md5( CRC_SALT_0001 . time() . microtime() . CRC_SALT_0009 . uniqid(1) ); // base of code ( with strlen(this)>$code_length ! ).
		$code = strtoupper(substr(str_replace("1","",str_replace("i","",str_replace("I","",str_replace("o","",str_replace("O","",str_replace("l","",str_replace("L","",str_replace("0","",$code_base)))))))),0,$code_length));
		$ts = time()+1800; // expires 30 mins after page load.
		$crckey = md5( $ts . $_SERVER["HTTP_USER_AGENT"] . CRC_SALT_0010 . $code . CRC_SALT_0008 );
		echo "<input type=hidden name=gfxcode_crc value=\"" . $crckey . "\">\n";
		echo "<input type=hidden name=gfxcode_ts value=\"" . $ts . "\">\n";
		$ENABLE_COOKIE_TABLE = 1;
		pg_safe_exec("INSERT INTO gfxcodes VALUES ('" . $code . "','" . $crckey . "','" . $ts . "')");
		$ENABLE_COOKIE_TABLE = 0;
		echo "<img src=\"gfx_code.php?crc=" . $crckey . "\" border=0 alt=\"TYPE THAT CODE IN THE INPUT BOX BELOW\"><br>\n";
?>
		<p>Now please enter the code you see in the above picture into the below input box (upper/lower case doesn't matter).</p>
		<input type=text size=35 maxlength=<?=$code_length?> name=gfxcode_val value="">
		</td></tr></table>
	</td></tr></table>
<? } ?>
<br>
<table width="500" bgcolor=#<?=$cTheme->main_textcolor?>><tr><td>
	<table cellpadding=5 bgcolor=#<?=$cTheme->table_bgcolor?> width="100%"><tr><td><font color=#<?=$cTheme->main_textcolor?>><H1>Step <?
if (SHOW_GFXUSRCHK && NEWUSERS_GFXCHECK) { echo "7"; } else { echo "6"; }
?>....</h1>
		<p>Individuals are granted the use of a Channel Service username specifically to gain access to channel services. While you need not use channel services to have a username, be aware that attempts to register multiple usernames to the same person will result in a suspension of all the offending names. Don't jeopardize your access to channel services by trying to register multiple usernames on our system.<br>Applying for a username while connected from a compromised computer is not allowed.</p>
		<p>Now click 'Submit' to finish your application. Values in all fields are
		required to process the form.</p>
		<input type=hidden name=clic value=1>
		<input type=submit>
	</td></tr></table>
</td></tr></table>
<input type=hidden name=posted value=1>
</form>
</body>
</html>
